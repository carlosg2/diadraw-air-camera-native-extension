<?xml version="1.0" encoding="UTF-8"?>
<project name="FlexCameraExtensionLib Build Script" default="package ane" > 

	<!-- Customize the following two files: -->
	<property file="build.properties"/>
	<property file="local.properties"/>
	<!-- property file="FlexCameraExtensionLib/ant/build.properties"/>
	<property file="FlexCameraExtensionLib/ant/local.properties"/ -->
	
	<!-- Temporary path structure for putting build results in: -->
	<property name="native.library.outputdir" 	value="${tempdir}/ios"/>
	
	<property name="air.library.outputdir" 		value="${tempdir}/swc"/>
	<property name="air.library.extractdir" 	value="${tempdir}/swc/content"/>
	
	<property name="extension.packagedir" 		value="${tempdir}/package"/>
	<property name="extension.outputdir" 		value="${tempdir}/package/ane"/>
	
	
	<!-- XCode ************************************************************ -->
	
	<!-- Clean the XCode project -->
	<target name="clean ios" description="Clean iOS Library">
		<exec executable="xcodebuild" failonerror="true" dir="${native.library.root}">
			<arg line="
				clean
			    -configuration ${build_type_iOS}
			"/>
		</exec>
	</target>
	
	
	<!-- Build the XCode project -->
	<target name="build ios" description="Build iOS Library">
		<exec executable="xcodebuild" failonerror="true" dir="${native.library.root}">
			<arg line="
				-project ${native.library.name}.xcodeproj
				-target ${native.library.name}
				-configuration ${build_type_iOS}
				SYMROOT=${native.library.builddir}
			"/> <!-- Note: SYMROOT is relative to the path that the dir parameter above is set to. -->
		</exec>
		
		<copy file="${native.library.root}/${native.library.builddir}/${build_type_iOS}-iphoneos/${native.library}" todir="${native.library.outputdir}" overwrite="true"/>
	</target>
	
	<!-- Do a clean build of the XCode project -->
	<target name="rebuild ios" depends="clean ios,build ios" description="Do a clean build of the XCode project"/>
	
	
	
	<!-- ActionScript ************************************************************ -->
	
	<!-- Build the SWC library -->
	<target name="build swc" description="Build swc library">
		<mkdir dir="${air.library.extractdir}"/>

		<fileset dir="${air.library.sourcedir}" casesensitive="yes" id="classfiles">
			<include name="**/*.as"/>
		</fileset>

		<pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
			<regexpmapper from=".*src.(.*)\.as" to="\1"/>
		</pathconvert>

		<exec executable="${COMPC}" failonerror="true">
			<arg line="
				+configname=airmobile
				-source-path ${air.library.sourcedir}
				-output ${air.library.outputdir}/${air.library.name}.swc
				-include-classes ${classlist}
			"/>
		</exec>

		<unzip src="${air.library.outputdir}/${air.library.name}.swc" dest="${air.library.extractdir}" overwrite="true"/>
		<copy file="${air.library.extractdir}/library.swf" todir="${air.library.outputdir}" overwrite="true"/>
		
		<mkdir dir="${libsdir}"/>
		<copy file="${air.library.outputdir}/${air.library.name}.swc" todir="${libsdir}" overwrite="true"/>
		<delete dir="${air.library.extractdir}"/>
	</target>
	
	
	<!-- Create the ANE package -->
	<target name="package ane" depends="rebuild ios, build swc" description="Package the extension into an ANE file">
		<mkdir  dir="${extension.packagedir}"/>
		<mkdir  dir="${extension.outputdir}"/>
			
		<!-- The next two ingredients are the two .xml files the accompany the extension:  -->
		<copy file="${air.library.sourcedir}/${extension.options}" 				todir="${extension.packagedir}"/>
		<copy file="${air.library.sourcedir}/${extension.platform.options}"  	todir="${extension.packagedir}"/>
		
		<copy file="${native.library.outputdir}/${native.library}"				todir="${extension.packagedir}"/>
		<copy file="${air.library.outputdir}/${air.library.name}.swc"			todir="${extension.packagedir}"/>
		<copy file="${air.library.outputdir}/library.swf"						todir="${extension.packagedir}"/>
			
		<exec executable="${ADT}" failonerror="true" dir="${extension.packagedir}">
			<arg line="       	
				-package 
				-target ane 
				ane/${air.library.name}.ane
				${extension.options} 
				-swc ../swc/${air.library.name}.swc
				-platform iPhone-ARM 
				-C . .
				-platformoptions ${extension.platform.options}
			"/>
		</exec>
		
		<delete dir="${anedir}"/>
		<mkdir dir="${anedir}"/>
		<move file="${extension.outputdir}/${air.library.name}.ane" todir="${anedir}"/>
		
		<delete dir="${tempdir}"/>
	</target>

</project>